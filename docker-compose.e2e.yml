volumes:
  pg-data:

services:
  e2e-postgres:
    image: postgres:16.8-alpine3.21
    volumes:
      - pg-data:/var/lib/postgresql/data
      - /dump:/dump
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_ROOT_PASSWORD=root
      - PGPORT=5433
    healthcheck:
      test: pg_isready -U postgres -d postgres
      interval: 3s
      timeout: 3s
      retries: 5

  e2e-application:
    build:
      context: '.'
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    command: >
      sh -c "bunx prisma migrate deploy && bun dev"
    user: vscode
    environment:
      - POSTGRES_PRISMA_URL=postgres://postgres:password@e2e-postgres:5433/postgres?pgbouncer=true&connect_timeout=15
      - POSTGRES_URL_NON_POOLING=postgres://postgres:password@e2e-postgres:5433/postgres
      - APP_ENV=test
      - AUTH_TRUST_HOST=http://e2e-application:3001
      - PORT=3001
    develop:
      watch:
        - action: sync
          path: .
          target: /app
        - action: rebuild
          path: ./package.json
    depends_on:
      e2e-postgres:
        condition: service_healthy

  e2e:
    build:
      context: './e2e'
      dockerfile: Dockerfile
      additional_contexts:
        - common=./
    environment:
      - CI=${CI}
      - PLAYWRIGHT_BASE_URL=http://e2e-application:3001
      - POSTGRES_PRISMA_URL=postgres://postgres:password@e2e-postgres:5433/postgres?pgbouncer=true&connect_timeout=15
      - POSTGRES_URL_NON_POOLING=postgres://postgres:password@e2e-postgres:5433/postgres
      - APPDOMAIN=e2e-application
    command: >
      sh -c "npm ${TEST_COMMAND}"
    volumes:
      - ./test-results:/app/test-results
    ports:
      - "9323:9323"
    develop:
      watch:
        - action: sync
          path: ./e2e
          target: /app
        - action: rebuild
          path: ./e2e/package.json
    depends_on:
      - e2e-application
